{"version":3,"mappings":"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CACA,QACA,UACA,uCACA,gBACA,EACA,gBAEA,qDACA,EACA,mBAEA,oDAEA,EACA,eACA,+BACA,6FACA,EACA,sBACA,oBACA,iCAEA,gCACA,EACA,mBACA,UACA,OACA,4BACA,sCACA,kBACA,EACA,oBACA,UACA,OACA,+BACA,mCACA,eACA,EACA,gBACA,+BACA,EACA,iBACA,gCACA,EACA,gBACA,oBACA,OACA,iBACA,+BACA,8DAEA,EACA,iBAEA,EACA,iBACA,YACA,EACA,2DACA,EACA,sBAEA,SACA,uDACA,kCACA,6EAEA,qCACA,sBACA,CACA,CACA,+HC9PC,MAAC,OAAO,wCAA6B,IAOtC,EAAI,OAAO,SAAW,GACtB,EAAI,OAAO,cAAgB,GAE3B,EAAI,IAAI,CAAS,EACjB,KAAM,GAAS,GAAI,GAAU,CAC3B,KAAM,UACN,KAAM,uBACN,OAAQ,CACN,CAAC,KAAM,IAAK,UAAW,EAAM,KAAM,MAAM,EACzC,CAAC,KAAM,IAAK,SAAU,GAAG,CAC1B,CACH,CAAC,EACD,GAAI,GAAI,CACN,GAAI,OACJ,WAAY,CAAE,MAAM,EACpB,SAAU,UACV,QACF,CAAC","names":[],"sources":["../../js/cite-grid/main.vue?vue&type=template&lang.js","../../js/cite-grid/main.vue","../../js/cite-grid/main.js"],"sourcesContent":["\n  <div>\n<!-- Stuff to support a future state-detail page:   -->\n<!--    <div>-->\n<!--      <p>-->\n<!--        <label for=\"choose-state\">Get more detail about a state:</label>-->\n<!--        <select id=\"choose-state\" @change=\"detailJurisdiction=$event.target.value\">-->\n<!--          <option>choose one:</option>-->\n<!--          <option v-for=\"jur in jurisdictions\" :value=\"jur.id\">{{jur.name}}</option>-->\n<!--        </select>-->\n<!--      </p>-->\n<!--    </div>-->\n<!--    <div v-if=\"detailJurisdiction\">-->\n<!--      <p>Total inbound citations: {{totalInbound(detailJurisdiction)}}</p>-->\n<!--      <p>Total outbound citations: {{totalOutbound(detailJurisdiction)}}</p>-->\n<!--    </div>-->\n<!--    <div v-else>-->\n    <div>\n\n      <h2>Map view</h2>\n      <div class=\"row\">\n        <div class=\"col-lg-3 col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"hoveredJurSelect\">Selected jurisdiction:</label>\n            <select class=\"form-control\" id=\"hoveredJurSelect\" v-model=\"hoveredJur\">\n              <option disabled value=\"\">Select one, or hover on the map</option>\n              <option v-for=\"jur in jurisdictions\" :key=\"jur.id\" v-bind:value=\"jur\">{{jur.name_long}}</option>\n            </select>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" id=\"mapDirectionInbound\" value=\"inbound\" v-model=\"mapDirection\">\n            <label class=\"form-check-label\" for=\"mapDirectionInbound\">Inbound citations</label>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" id=\"mapDirectionOutbound\" value=\"outbound\" v-model=\"mapDirection\">\n            <label class=\"form-check-label\" for=\"mapDirectionOutbound\">Outbound citations</label>\n          </div>\n          <div id=\"hovered-map-message\">\n            <span v-if=\"hoveredJur\">\n              Darker states are more likely to {{mapDirection === \"inbound\" ? \"cite to\" : \"be cited by\"}} {{hoveredJur.name_long}}.\n            </span>\n            <span v-else>\n              Hover over a state to see what other states {{mapDirection === \"inbound\" ? \"most often cite it\" : \"it most often cites\"}}.\n            </span>\n          </div>\n        </div>\n        <div class=\"col-lg-9 col-md-12\" aria-label=\"United States map showing frequency of citations from one jurisdiction to another by color\">\n          <div aria-hidden=\"true\">\n            <USMap @mouseover=\"mapMouseover\" @mouseleave=\"mapMouseleave\" class=\"map\" />\n          </div>\n        </div>\n      </div>\n\n      <h2>Grid view</h2>\n      <p>\n        This grid shows what percentage of the citations <i>by</i> each state on the left are <i>to</i> each state\n        on the top. For example, the square in the row marked \"Alaska\" and column marked \"Cal.\" indicates that\n        2.5% of all citations extracted from Alaska cases are to California cases.\n        <a href=\"#\" download=\"cite-grid.csv\" @click=\"csvDownloadClicked\" @contextmenu=\"csvDownloadClicked\">Download CSV</a>.\n      </p>\n      <div>\n        Coloring of each square is logarithmic to emphasize the range between 0 and 10%:<br>\n        0%\n        <div style=\"display: inline-block; background-color: white\">\n          <span v-bind:key=\"i\" v-for=\"i in 20\" :style=\"{backgroundColor: percentageColor((i-1)/2), width: '1em', display: 'inline-block'}\" :title=\"`${(i-1)/2}%`\">&nbsp;</span>\n        </div>\n        10%\n      </div>\n      <p>\n        Hover over a grid square for details:\n      </p>\n      <div class=\"table-scroll\">\n        <table v-if=\"dataLoaded\">\n          <tr>\n            <th :class=\"{'top-header': true, 'left-header': true, disabled: selfDisabled}\"\n                @click=\"selfDisabled = !selfDisabled\"\n            >\n              <div v-if=\"hoveredGridMessage\" class=\"hovered-grid-message\">{{hoveredGridMessage}}</div>\n              <div>Self</div>\n            </th>\n            <th v-for=\"toJur in jurisdictions\"\n                :key=\"toJur.id\"\n                :class=\"{rotate: true, 'top-header': true, disabled: disabled[toJur.id]}\"\n                @click=\"toggleJurisdiction(toJur)\"\n                scope=\"col\"\n            >\n              <div>{{toJur.name}}</div>\n            </th>\n          </tr>\n          <tr v-for=\"fromJur in jurisdictions\" :key=\"fromJur.id\">\n            <th scope=\"row\" class=\"left-header\">{{fromJur.name}}</th>\n            <td v-for=\"toJur in jurisdictions\"\n                :key=\"toJur.id\"\n                :style=\"{backgroundColor: countColor(fromJur, toJur)}\"\n                :title=\"hoverText(fromJur, toJur)\"\n                @mouseover=\"hoveredGridMessage=hoverText(fromJur, toJur)\"\n                @mouseleave=\"hoveredGridMessage=null\"\n            >\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n","<template>\n  <div>\n<!-- Stuff to support a future state-detail page:   -->\n<!--    <div>-->\n<!--      <p>-->\n<!--        <label for=\"choose-state\">Get more detail about a state:</label>-->\n<!--        <select id=\"choose-state\" @change=\"detailJurisdiction=$event.target.value\">-->\n<!--          <option>choose one:</option>-->\n<!--          <option v-for=\"jur in jurisdictions\" :value=\"jur.id\">{{jur.name}}</option>-->\n<!--        </select>-->\n<!--      </p>-->\n<!--    </div>-->\n<!--    <div v-if=\"detailJurisdiction\">-->\n<!--      <p>Total inbound citations: {{totalInbound(detailJurisdiction)}}</p>-->\n<!--      <p>Total outbound citations: {{totalOutbound(detailJurisdiction)}}</p>-->\n<!--    </div>-->\n<!--    <div v-else>-->\n    <div>\n\n      <h2>Map view</h2>\n      <div class=\"row\">\n        <div class=\"col-lg-3 col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"hoveredJurSelect\">Selected jurisdiction:</label>\n            <select class=\"form-control\" id=\"hoveredJurSelect\" v-model=\"hoveredJur\">\n              <option disabled value=\"\">Select one, or hover on the map</option>\n              <option v-for=\"jur in jurisdictions\" :key=\"jur.id\" v-bind:value=\"jur\">{{jur.name_long}}</option>\n            </select>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" id=\"mapDirectionInbound\" value=\"inbound\" v-model=\"mapDirection\">\n            <label class=\"form-check-label\" for=\"mapDirectionInbound\">Inbound citations</label>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" id=\"mapDirectionOutbound\" value=\"outbound\" v-model=\"mapDirection\">\n            <label class=\"form-check-label\" for=\"mapDirectionOutbound\">Outbound citations</label>\n          </div>\n          <div id=\"hovered-map-message\">\n            <span v-if=\"hoveredJur\">\n              Darker states are more likely to {{mapDirection === \"inbound\" ? \"cite to\" : \"be cited by\"}} {{hoveredJur.name_long}}.\n            </span>\n            <span v-else>\n              Hover over a state to see what other states {{mapDirection === \"inbound\" ? \"most often cite it\" : \"it most often cites\"}}.\n            </span>\n          </div>\n        </div>\n        <div class=\"col-lg-9 col-md-12\" aria-label=\"United States map showing frequency of citations from one jurisdiction to another by color\">\n          <div aria-hidden=\"true\">\n            <USMap @mouseover=\"mapMouseover\" @mouseleave=\"mapMouseleave\" class=\"map\" />\n          </div>\n        </div>\n      </div>\n\n      <h2>Grid view</h2>\n      <p>\n        This grid shows what percentage of the citations <i>by</i> each state on the left are <i>to</i> each state\n        on the top. For example, the square in the row marked \"Alaska\" and column marked \"Cal.\" indicates that\n        2.5% of all citations extracted from Alaska cases are to California cases.\n        <a href=\"#\" download=\"cite-grid.csv\" @click=\"csvDownloadClicked\" @contextmenu=\"csvDownloadClicked\">Download CSV</a>.\n      </p>\n      <div>\n        Coloring of each square is logarithmic to emphasize the range between 0 and 10%:<br>\n        0%\n        <div style=\"display: inline-block; background-color: white\">\n          <span v-bind:key=\"i\" v-for=\"i in 20\" :style=\"{backgroundColor: percentageColor((i-1)/2), width: '1em', display: 'inline-block'}\" :title=\"`${(i-1)/2}%`\">&nbsp;</span>\n        </div>\n        10%\n      </div>\n      <p>\n        Hover over a grid square for details:\n      </p>\n      <div class=\"table-scroll\">\n        <table v-if=\"dataLoaded\">\n          <tr>\n            <th :class=\"{'top-header': true, 'left-header': true, disabled: selfDisabled}\"\n                @click=\"selfDisabled = !selfDisabled\"\n            >\n              <div v-if=\"hoveredGridMessage\" class=\"hovered-grid-message\">{{hoveredGridMessage}}</div>\n              <div>Self</div>\n            </th>\n            <th v-for=\"toJur in jurisdictions\"\n                :key=\"toJur.id\"\n                :class=\"{rotate: true, 'top-header': true, disabled: disabled[toJur.id]}\"\n                @click=\"toggleJurisdiction(toJur)\"\n                scope=\"col\"\n            >\n              <div>{{toJur.name}}</div>\n            </th>\n          </tr>\n          <tr v-for=\"fromJur in jurisdictions\" :key=\"fromJur.id\">\n            <th scope=\"row\" class=\"left-header\">{{fromJur.name}}</th>\n            <td v-for=\"toJur in jurisdictions\"\n                :key=\"toJur.id\"\n                :style=\"{backgroundColor: countColor(fromJur, toJur)}\"\n                :title=\"hoverText(fromJur, toJur)\"\n                @mouseover=\"hoveredGridMessage=hoverText(fromJur, toJur)\"\n                @mouseleave=\"hoveredGridMessage=null\"\n            >\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {stringify} from 'csv-stringify/browser/esm/sync';\n  import {jsonQuery} from '../api';\n  import USMap from '../../../capweb/templates/includes/usa_territories_white.svg';\n\n  /* eslint-disable */\n  // const deepCopy = (value) => JSON.parse(JSON.stringify(value));\n  const toHashMap = (a,f) => a.reduce((a,c)=> (a[f(c)]=c,a),{});\n  const sum = (arr) => arr.reduce((a, b) => a + (b || 0), 0);\n\n  export default {\n    name: 'Main',\n    components: {\n      USMap,\n    },\n    async mounted() {\n      this.jurisdictions = await this.getJSON('jurisdictions.json');\n      for (const j of this.jurisdictions)\n        j.id = j.id.toString();\n      this.jurisdictionsById = toHashMap(this.jurisdictions, jur=>jur.id);\n      this.jurisdictionsBySlug = toHashMap(this.jurisdictions, jur=>jur.slug);\n      this.jurisdictionsNotOnMap = toHashMap(this.jurisdictions.filter(jur=>document.getElementById(jur.slug)===null),jur=>jur.id);\n      this.totals = await this.getJSON('totals.json');\n      // this.totalsByYear = await this.getJSON('totals_by_year.json');\n      this.dataLoaded = true;\n    },\n    data() {\n      return {\n        jurisdictions: null,\n        totals: null,\n        totalsByYear: null,\n        selfDisabled: false,\n        disabled: {},  //39: true},\n        dataLoaded: false,\n        detailJurisdiction: null,\n        hoveredJur: null,\n        mapDirection: \"inbound\",\n        hoveredGridMessage: null,\n      }\n    },\n    watch: {\n      hoveredJur: function (focusedJur) {\n        if (focusedJur) {\n          // when hovering over a jurisdiction in the map, set opacity of all other jurisdictions\n          const id = focusedJur.id;\n          const focusedEl = document.getElementById(focusedJur.slug);\n          focusedEl.style.fillOpacity = 1;\n          focusedEl.classList.add(\"focused\");\n          const countFunction = this.mapDirection === \"inbound\" ? this.inboundCounts : this.outboundCounts;\n          const maxCount = Math.max(...countFunction(id, this.jurisdictionsNotOnMap));\n          for (const jur of this.jurisdictions) {\n            if (jur.id === id)\n              continue;\n            const count = this.mapDirection === \"inbound\" ? this.totals[jur.id][id] : this.totals[id][jur.id];\n            const jurEl = document.getElementById(jur.slug);\n            if (!jurEl)\n              continue;\n            jurEl.style.fillOpacity = count/maxCount;\n            jurEl.classList.remove(\"focused\");\n          }\n        }\n      }\n    },\n\n    methods: {\n      async getJSON(fileName) {\n        return await jsonQuery(\"/download/citation_graph/2020-05-08/aggregations/\"+fileName);\n      },\n      citePercentage(fromJur, toJur) {\n        // disabling this for now -- allows vertical jurisdictions in grid to be removed\n        // less useful with logPercentage() coloring\n        // const disabled = {...this.disabled};\n        // if(this.selfDisabled)\n        //   disabled[fromJur.id] = true;\n        // if (disabled[toJur.id])\n        //   return '';\n        // const toSubtract = sum(Object.keys(disabled).map((id) => this.totals[fromJur.id][id]));\n        // const denominator = this.jurisdictionsById[fromJur.id].cites - toSubtract;\n        const denominator = this.jurisdictionsById[fromJur.id].cites;\n        let percentage = 0;\n        if (denominator)\n          percentage = (this.totals[fromJur.id][toJur.id] || 0) / denominator * 100;\n        return percentage ? percentage.toFixed(1) : 0;\n      },\n      countColor(fromJur, toJur) {\n        // return color for citation count from fromJur to toJur\n        return this.percentageColor(this.citePercentage(fromJur, toJur));\n      },\n      percentageColor(x) {\n        // convert a percentage between 0 and 100 to a color, log normalized\n        return `rgba(44, 96, 255, ${this.logPercentage(x)}%)`;\n        // return `hsl(0,0%,${100-this.logPercentage(x)}%)`;\n      },\n      hoverText(fromJur, toJur) {\n        let percentage = this.citePercentage(fromJur, toJur);\n        return `${this.jurisdictionsById[fromJur.id].name} cites ${this.jurisdictionsById[toJur.id].name} ${percentage}%`;\n      },\n      toggleJurisdiction(jur) {\n        if (this.disabled[jur.id])\n          this.$delete(this.disabled, jur.id);\n        else\n          this.$set(this.disabled, jur.id, true);\n      },\n      inboundCounts(id, ignore) {\n        if (!ignore)\n          ignore = {};\n        return Object.entries(this.totals)\n          .filter(([k, v]) => k !== id && !ignore[k] && v[id] > 0)\n          .map(([k, v]) => v[id]);\n      },\n      outboundCounts(id, ignore) {\n        if (!ignore)\n          ignore = {};\n        return Object.entries(this.totals[id])\n          .filter(([k, v]) => k !== id && !ignore[k] && v > 0)\n          .map(([k, v]) => v);\n      },\n      totalInbound(id) {\n        return sum(this.inboundCounts(id));\n      },\n      totalOutbound(id) {\n        return sum(this.outboundCounts(id));\n      },\n      mapMouseover(event) {\n        if (!this.dataLoaded)\n          return;\n        const target = event.target;\n        if (target.classList.contains('state')) {\n          this.hoveredJur = this.jurisdictionsBySlug[target.parentElement.id];\n        }\n      },\n      mapMouseleave(event) {\n       // this.hoveredJur = null;\n      },\n      logPercentage(x) {\n        if (x<.1)\n          return x;\n        return (Math.log(x) - Math.log(.1)) / (Math.log(100) - Math.log(.1)) * 100;\n      },\n      csvDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        let payload = [];\n        payload.push([\"\", ...this.jurisdictions.map((jur)=>jur.name_long)]);\n        for (const fromJur of this.jurisdictions) {\n          payload.push([fromJur.name_long, ...this.jurisdictions.map((toJur)=>this.citePercentage(fromJur, toJur))]);\n        }\n        payload = \"data:text/csv;base64,\" + btoa(stringify(payload));\n        event.currentTarget.href = payload;\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .map {\n    .state-link {\n      &.focused .state {\n        fill: #EDA633;\n      }\n    }\n    .state {\n      stroke: black;\n      stroke-width: .5;\n      cursor: pointer;\n      pointer-events: all;\n      fill: #2C60FF;\n    }\n  }\n  .hovered-grid-message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-color: white;\n    padding: .2em;\n    border: 1px black solid;\n  }\n  #hovered-map-message {\n    margin-top: 1em;\n    font-weight: bold;\n  }\n</style>","// temp workaround for https://github.com/vitejs/vite/issues/4786\nif (import.meta.env.MODE !== 'development') {\n  import('vite/modulepreload-polyfill')  // https://vitejs.dev/config/#build-polyfillmodulepreload\n}\n\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Main from './main.vue'\n\nVue.config.devtools = true;\nVue.config.productionTip = false;\n\nVue.use(VueRouter);\nconst router = new VueRouter({\n  mode: 'history',\n  base: '/exhibits/cite-grid/',\n  routes: [\n    {path: '/', component: Main, name: 'main'},\n    {path: '*', redirect: '/'},\n  ]\n});\nnew Vue({\n  el: '#app',\n  components: { Main },\n  template: '<Main/>',\n  router\n});"],"file":"assets/cite-grid.c71ddaf6.js"}